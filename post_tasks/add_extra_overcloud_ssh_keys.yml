---
# Creates and setup an additional set of ECSDA keys on the overcloud nodes
# Those can be used by paramiko-based code to connect to the nodes,
# because the default paramiko version up to 17 does not support
# the default RSA(-2) keys.

- name: Create and distribute an alternative set of SSH keys
  hosts: "overcloud_nodes:!unused:undercloud{{ (tester_node|length > 0) | ternary( ':' + tester_node, '') }}"
  gather_facts: no
  vars:
      alternative_overcloud_key_path: '~/.ssh/id_extra_keys'
  tasks:
      # do not use openssh_keypair: it always add the -C option,
      # which changes the format of the key in a way that makes it
      # not working with the paramiko version we use (17)
      - name: create a new key
        shell: |
            ssh-keygen -q -t ecdsa -N '' -q -f {{ alternative_overcloud_key_path }}
        args:
            creates: "{{ alternative_overcloud_key_path }}"
        run_once: yes
        delegate_to: "{{ (tester_node|length > 0) | ternary(tester_node, groups['undercloud'][0]) }}"

      - name: register the new public key
        shell: |
            cat {{ alternative_overcloud_key_path }}.pub
        register: alternative_overcloud_public_key
        delegate_to: "{{ (tester_node|length > 0) | ternary(tester_node, groups['undercloud'][0]) }}"

- name: Authorize the new key on overcloud nodes
  hosts: overcloud_nodes:!unused
  gather_facts: no
  tasks:
      - name: authorize the new key
        authorized_key:
            user: "{{ install.overcloud.ssh.user|default(ansible_user) }}"
            key: "{{ alternative_overcloud_public_key.stdout }}"

- name: Authorize the new key on undercloud and tester node
  hosts: undercloud
  gather_facts: no
  tasks:
      - name: authorize the new key on the undercloud
        authorized_key:
            user: "{{ install.user.name }}"
            key: "{{ alternative_overcloud_public_key.stdout }}"

      - name: authorize the new key on the tester node
        authorized_key:
            user: "{{ tester_username|default(ansible_user)|default(ansible_ssh_user) }}"
            key: "{{ alternative_overcloud_public_key.stdout }}"
        delegate_to: tester_node
        when: tester_node|length > 0
