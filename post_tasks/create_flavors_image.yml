---
- name: Create customized flavors and image
  hosts: undercloud
  gather_facts: no
  tasks:
      - name: Create compute flavors
        vars:
            ansible_python_interpreter: "/var/tmp/venv_shade/bin/python"
        os_nova_flavor:
            validate_certs: no
            cloud: overcloud
            state: present
            name: "{{ item.name }}"
            ram: "{{ install.workload.memory }}"
            vcpus: "{{ install.workload.vcpu }}"
            disk: "{{ install.workload.disk }}"
            flavorid: "{{ item.flavorid }}"
            extra_specs: "{{ install.workload.flavor.extra.specs }}"
        loop:
            - { name: customized_flavor, flavorid: "{{ install.workload.flavorid }}" }
            - { name: customized_flavor_alt, flavorid: "{{ (install.workload.flavorid|int + 1 )|string }}" }
        delegate_to: "{{ groups.shade | first }}"

      - name: Create image
        block:
            - name: Set hostname url
              set_fact:
                  hostname_url: "{{ install.image | basename }}"

            - name: Download image
              get_url:
                  url: "{{ install.image }}"
                  dest: "/tmp/{{ hostname_url }}"

            - name: Define backend settings
              set_fact:
                  libguestfs_backend: direct

            - name: Install libguestfs-tools
              become: yes
              package:
                  name: libguestfs-tools
                  state: present

            - name: Push repos to the image
              environment:
                  LIBGUESTFS_BACKEND: "{{ libguestfs_backend }}"
              command: "virt-copy-in -a /tmp/{{ hostname_url }} /etc/yum.repos.d /etc/"

            - name: Disable 'patched-rpms' yum repository in guest image
              environment:
                  LIBGUESTFS_BACKEND: "{{ libguestfs_backend }}"
              command: "virt-customize -a /tmp/{{ hostname_url }} --run-command \"yum-config-manager --disable patched-rpms\""
              failed_when: false

            - name: Install packages in guest image tempest will use for testing
              environment:
                  LIBGUESTFS_BACKEND: "{{ libguestfs_backend }}"
              command: "virt-customize -a /tmp/{{ hostname_url }} --install {{ install.image_packages }} --selinux-relabel"
              when: install.image_packages is defined

            - name: Upload {{ hostname_url }} image
              shell: |
                  source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
                  openstack image create {{ item.name }} --id {{ item.imageid }} --disk-format qcow2 --container-format bare --file /tmp/{{ hostname_url }} --public
              loop:
                  - { name: "{{ hostname_url }}", imageid: "{{ install.imageid | default(999999999 | random | to_uuid) }}" }
                  - { name: "{{ hostname_url }}_alt", imageid: "{{ install.imageid_alt | default(99999999 | random | to_uuid) }}" }

            - name: Upload {{ hostname_url }} image with extra specs
              shell: |
                  source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
                  openstack image set {{ hostname_url }} --property {{ item }}
                  openstack image set {{ hostname_url }}_alt --property {{ item }}
              loop: "{{ install.workload.image.get('properties', []) }}"
              when: install.workload.image.properties is defined

            - name: Get glance image ids
              shell: |
                  source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
                  openstack image list -f value -c ID
              register: image_list

            - name: Create a yaml file containing image names
              copy:
                  content: "{{ image_list.stdout_lines | to_nice_yaml(indent=2) }}"
                  dest: "{{ ansible_user_dir }}/post_tasks_glance_images.yml"
        when: install.image is defined
        ignore_errors: yes
