---
# This playbook is used to enable the network access to the share networks.
# For CephFS-NFS scenario tests we need to create a shared network mapping
# to the underlying VLAN network on the overcloud.
# On CephFS environmet the name of the network is 'storage' and on Ceph-NFS
# is 'StorageNFS'.
# In addition to each network, a subnet is created.
- name: Create manila network
  hosts: undercloud
  gather_facts: no
  vars:
      source_dir: "{{ install.deployment.files }}"
      template_base: "{{ ansible_user_dir }}/{{ source_dir | basename }}"
      network_env_file: "network-environment{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"
  tasks:
      - name: set the manila backend
        set_fact:
            manila_backend: '{{ install.manila.backend }}'
        when: (install.manila|default({})).backend | default(False)

      - name: Read {{ network_env_file }}
        command: "cat {{ template_base }}/network/{{ network_env_file }}"
        register: network_template_out
        ignore_errors: yes

      - name: Load deployment manila-storage network
        set_fact:
            network_template: "{{ network_template_out.stdout | from_yaml }}"
        ignore_errors: yes

      - name: Set facts for cephfs-native environment
        set_fact:
            AllocationPools: "{{ network_template.parameter_defaults.StorageAllocationPools|default('') }}"
            network_name: 'storage'
            subnet_name: 'storage-subnet'
        when: manila_backend == 'cephfs-native'
        ignore_errors: yes

      - name: Set facts for cephfs-nfs environment
        set_fact:
            AllocationPools: "{{ network_template.parameter_defaults.StorageNFSAllocationPools|default('') }}"
            network_name: 'StorageNFS'
            subnet_name: 'StorageNFSSubnet'
        when: manila_backend == 'cephfs-nfs'
        ignore_errors: yes

      - name: Create {{ network_name }} network
        vars:
            NeutronNetworkVLANRanges: "{{ network_template.parameter_defaults.NeutronNetworkVLANRanges|default('') }}"
            StorageNetworkVlanID: "{{ network_template.parameter_defaults.StorageNetworkVlanID|default('') }}"
            StorageNFSNetworkVlanID: "{{ network_template.parameter_defaults.StorageNFSNetworkVlanID|default('') }}"
        shell: |
            source ~/{{ install.overcloud.stack }}rc
            openstack --insecure network create {{ external_network_name }} --shared \
            --provider-physical-network {{ NeutronNetworkVLANRanges.split(':')[0] }} \
            --provider-network-type vlan \
            --provider-segment ' + {{ (manila_backend == 'cephfs-nfs') | ternary(StorageNFSNetworkVlanID, StorageNetworkVlanID) | string }}
        ignore_errors: yes

      - name: Create {{ subnet_name }} subnet
        vars:
            ansible_python_interpreter: "/var/tmp/venv_shade/bin/python"
            StorageNetCidr: "{{ network_template.parameter_defaults.StorageNetCidr|default('') }}"
            StorageNFSNetCidr: "{{ network_template.parameter_defaults.StorageNFSNetCidr|default('') }}"
            pool_start: "{{ AllocationPools[0]['start'].split('.')[0:3] | join('.')  }}.150"
            pool_end: "{{ AllocationPools[0]['start'].split('.')[0:3] | join('.')  }}.150"
            cidr: "{{ (manila_backend == 'cephfs-nfs') | ternary(StorageNFSNetCidr, StorageNetCidr) }}"
        shell: |
            source ~/{{ install.overcloud.stack }}rc
            openstack --insecure subnet create {{ subnet_name }} --shared \
            --network {{ network_name }} --dhcp \
            --allocation-pool start={{pool_start|string}},end={{pool_end|string}} \
            --subnet-range  {{cidr}}
        ignore_errors: yes
        when: install.network.protocol == 'ipv4'

      - name: Create IPv6 {{ subnet_name }} subnet
        vars:
          ansible_python_interpreter: "/var/tmp/venv_shade/bin/python"
          StorageNetCidr: "{{ network_template.parameter_defaults.StorageNetCidr|default('') }}"
          StorageNFSNetCidr: "{{ network_template.parameter_defaults.StorageNFSNetCidr|default('') }}"
          pool_start: "{{ AllocationPools[0]['start'].split(':')[0:4] | join(':') }}::fb:10"
          pool_end: "{{ AllocationPools[0]['end'].split(':')[0:4] | join(':')  }}::fb:fe"
          cidr: "{{ (manila_backend == 'cephfs-nfs') | ternary(StorageNFSNetCidr, StorageNetCidr) }}"
        shell:
            openstack --insecure subnet create {{ subnet_name }} --ip-version 6 \
            --network {{ network_name }}  --dhcp \
            --subnet-range {{ cidr }} \
            --allocation-pool start={{pool_start|string}},end={{pool_end|string}} \
            --ipv6-address-mode dhcpv6-stateful --ipv6-ra-mode dhcpv6-stateful
        ignore_errors: yes
        when: install.network.protocol == 'ipv6'
