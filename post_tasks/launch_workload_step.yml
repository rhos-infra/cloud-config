---
# This playbook is used to launch an instance and attach a floating IP to it with all the required steps
# such as image, network, subnet or router creation.

- name: Register stack user pub key
  command: cat ~/.ssh/id_rsa.pub
  register: pub_key

# Upload image from undercloud via Openstack cli as the os_image module fails with
# ShadeAdapter' object has no attribute 'get_api_major_version': RHOSINFRA-1562
- name: Download image
  get_url:
      url: "{{ install.workload.image.url }}"
      dest: /tmp/workload_image.qcow2

- name: Check if workload image is present
  shell: |
      source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
      openstack image list -f value -c Name | grep workload_image_{{ step }}
  register: workload_image_present
  ignore_errors: true

- name: Upload image
  shell: |
      source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
      openstack image create workload_image_{{ step }} --disk-format qcow2 --container-format bare --file /tmp/workload_image.qcow2
  when: workload_image_present|failed

- block:
    - name: Create flavor
      os_nova_flavor:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          name: workload_flavor_{{ step }}
          ram: "{{ install.workload.memory }}"
          vcpus: "{{ install.workload.vcpu }}"
          disk: "{{ install.workload.disk }}"

    - name: Create internal network
      os_network:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          name: workload_internal_net_{{ step }}
          external: false
      register: workload_internal_net

    - name: Create internal subnet
      os_subnet:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          network_name: workload_internal_net_{{ step }}
          name: workload_internal_net_subnet_{{ step }}
          cidr: 192.168.0.0/24

    - name: Register overcloud network facts
      os_networks_facts:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          filters:
              router:external: true

    - name: Create router
      os_router:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          name: workload_router_{{ step }}
          network: "{{ openstack_networks[0].name }}"
          interfaces:
            - workload_internal_net_subnet_{{ step }}

    - name: Create security group
      os_security_group:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          name: workload_secgroup_{{ step }}
          description: security group for overcloud test workload

    - name: Create ICMP security group rule
      os_security_group_rule:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          security_group: workload_secgroup_{{ step }}
          protocol: icmp
          remote_ip_prefix: 0.0.0.0/0

    - name: Create SSH security group rule
      os_security_group_rule:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          security_group: workload_secgroup_{{ step }}
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: 0.0.0.0/0

    - name: Create keypair
      os_keypair:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          state: present
          name: workload_key_{{ step }}
          public_key: "{{ pub_key.stdout }}"
  delegate_to: "{{ groups.shade | first }}"
  vars:
    ansible_python_interpreter: "/var/tmp/venv_shade/bin/python"

# Create instance from undercloud via Openstack cli as the os_server module fails with
# ShadeAdapter' object has no attribute 'get_api_major_version': RHOSINFRA-1562
- name: Check if instance already exists
  shell: |
      source ~/{{ install.overcloud.stack }}rc
      openstack server list -f value -c Name | grep workload_instance_{{ step }}
  register: workload_instance_present
  ignore_errors: true

- name: Create instance
  shell: |
      source ~/{{ install.overcloud.stack }}rc
      openstack server create \
          --image workload_image \
          --flavor workload_flavor \
          --security-group workload_secgroup \
          --key-name  workload_key \
          --nic net-id={{ workload_internal_net.id }} \
      workload_instance_{{ step }}
  when: workload_instance_present|failed

- name: Wait for instance to be in active state
  shell: |
      source ~/{{ install.overcloud.stack }}rc
      openstack server show workload_instance_{{ step }} -f json | \
          jq -r -c .status
  register: instance_state
  until: instance_state.stdout.find("ACTIVE") > -1
  retries: 30
  delay: 5

- block:
    - name: Assign floating IP to workload instance
      os_floating_ip:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          server: workload_instance_{{ step }}

    - name: Register workload instance facts
      os_server_facts:
          # Required for SSL
          validate_certs: no
          cloud: overcloud
          server: workload_instance_{{ step }}
  delegate_to: "{{ groups.shade | first }}"
  vars:
    ansible_python_interpreter: "/var/tmp/venv_shade/bin/python"

- name: Wait for port 22 to become open on workload instance
  wait_for:
      port: 22
      host: "{{ openstack_servers[0].public_v4 }}"
      search_regex: SSH-2.0
      delay: 5
