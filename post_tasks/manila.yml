---
- name: Ceph for rhos10
  hosts: ceph
  become: true
  gather_facts: no
  any_errors_fatal: true
  vars:
      node_name: "ceph-0.external"
  tasks:
      - block:

            - name: Generate SSH keys
              shell: ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ''
              args:
                creates: ~/.ssh/id_rsa

            - name: Copy id_rsa.pub to authorized_keys
              shell: cat ~/.ssh/id_rsa.pub  >> ~/.ssh/authorized_keys

            - name: PermitRootLogin
              lineinfile:
                dest: /etc/ssh/sshd_config
                regexp: '^PermitRootLogin'
                line: "PermitRootLogin yes"

            - name: PubkeyAuthentication
              lineinfile:
                dest: /etc/ssh/sshd_config
                regexp: '^PubkeyAuthentication'
                line: "PubkeyAuthentication yes"


            - name: Restart service httpd, in all cases
              service:
                name: httpd
                state: restarted

            - name: install the ceph-deploy
              yum: name={{ item }} state=latest
              with_items:
              - ceph-deploy

            - name: purge ceph
              shell: ceph-deploy purge "{{ node_name }}"

            - name: ceph purgedata
              shell: ceph-deploy purgedata "{{ node_name }}"

            - name: ceph-deploy install
              shell: ceph-deploy install "{{ node_name }}"

            - name: ceph-deploy new
              shell: ceph-deploy new "{{ node_name }}"

            - name: ceph-deploy mon
              shell: ceph-deploy mon create-initial

            - name: ceph-deploy admin
              shell: ceph-deploy admin "{{ node_name }}"

            - name: create osd.img
              shell: dd if=/dev/zero of=osd.img count=1024 bs=10M

            - name: Set up a loop device along with osd preparation and activation
              shell: export FIRST_UNUSED=$(losetup -f); losetup $FIRST_UNUSED osd.img; ceph-disk  prepare $FIRST_UNUSED

            - name: Workaround. Fix ceph cluster health by reducing the number of replicas in each pool 
              shell: ceph osd pool set rbd size 1

            - name: ceph version
              shell: ceph version | awk '{print $3; }' | tr '.' ' ' | awk '{print $1 "." $2; }'
              register: ceph_version

            - debug: msg="{{ ceph_version.stdout }}"

            - name: Fail if wrong version of ceph was installed
              fail: msg="Wrong ceph version"
              when: ceph_version.stdout != "10.2"


            - name: record ceph cluster health status
              shell:  ceph -s | grep health | awk '{print $2; }'
              register: ceph_health_status


            - debug: msg="{{ ceph_health_status.stdout }}"

            - name: Fail if ceph cluster is not healthy
              fail: msg="Ceph cluster is not healthy"
              when: ceph_health_status.stdout != "HEALTH_OK"

        when: install.version|default(undercloud_version)|openstack_release == 10

#                  ceph-deploy install --mgr "{{ node_name }}"
#                  ceph-deploy mgr create "{{ node_name }}"


- name: Edit /etc/manila/manila.conf
  hosts: controller
  become: true
  gather_facts: no
  any_errors_fatal: true
  tasks:
      - name: Set cephfs_enable_snapshots to False
        ini_file:
           dest: "/etc/manila/manila.conf"
           section: "cephfsnative"
           option: "cephfs_enable_snapshots"
           value: "False"

      - name: Remove cephfs_cluster_name line
        ini_file:
           dest: "/etc/manila/manila.conf"
           section: "cephfsnative"
           option: "cephfs_cluster_name"
           value: "ceph"
           state: "absent"

      - name: fetch /etc/manila/manila.conf
        fetch:
          src: /etc/manila/manila.conf"
          dest: manila.conf

      - name: detect netapp installs
        shell: crudini --get /etc/manila/manila.conf DEFAULT enabled_share_backends | grep netapp
        failed_when: false
        register: result
        become: true
        changed_when: false

      - name: set is_netapp fact
        set_fact:
          is_netapp: "{{ result.rc == 0 }}"
        delegate_to: "{{ item }}"
        delegate_facts: yes
        with_items: "{{ groups['undercloud'] }}"

      - name: Restart manila services
        shell: systemctl restart openstack-manila\*

      - name: Check for manila.conf
        stat:
            path: /etc/manila/manila.conf
        register: manila_conf

      - block:
          - name: get the default share from manila.conf
            command: "awk -F \"=\" '/^default_share_type/ {print $2}' /etc/manila/manila.conf"
            register: result
            changed_when: false

          - set_fact:
                share_type_name: "{{ result.stdout }}"
            delegate_to: "{{ item }}"
            delegate_facts: yes
            with_items: "{{ groups['undercloud'] }}"

        when: manila_conf.stat.exists

- name: Setup default share type for manila
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  tasks:
      - name: set default share name if not already defined
        when: share_type_name is not defined or not share_type_name
        set_fact:
           share_type_name: default

      - name: create manila default share type
        shell: |
            test -f {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 && \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 || \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
            manila type-create {{ share_type_name }} False
        register: result
        failed_when: result.rc !=0 and 'Share Type {{ share_type_name }} already exists' not in result.stderr
        changed_when: "'Share Type {{ share_type_name }} already exists' not in result.stderr"
        tags: skip_ansible_lint

      - name: netapp specific
        when: is_netapp
        block:
        - name: enable snapshot_support for netapp jobs
          shell: |
              test -f {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 && \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 || \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
              manila type-key {{ share_type_name }} set snapshot_support=True
              manila extra-specs-list
          register: result
          failed_when: "'snapshot_support : True' not in result.stdout"

        - name: enable create_share_from_snapshot_support for rhos>=11 netapp jobs
          shell: |
              test -f {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 && \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 || \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
              manila type-key {{ share_type_name }} set create_share_from_snapshot_support=True
              manila extra-specs-list
          when: install.version|default(undercloud_version)|openstack_release >= 11
          register: result
          failed_when: "'create_share_from_snapshot_support : True' not in result.stdout"

        - name: sets driver_handles_share_servers=False for default share
          shell: |
              test -f {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 && \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3 || \
                source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
              manila type-key {{ share_type_name }} set driver_handles_share_servers=False
              manila extra-specs-list
          register: result
          failed_when: "'driver_handles_share_servers : False' not in result.stdout"
