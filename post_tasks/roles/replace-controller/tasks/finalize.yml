- name: refresh the cluster and manage galera-bundle resource
  shell: |
      pcs resource refresh galera-bundle
      pcs resource manage galera-bundle
  become: yes
  delegate_to: "{{ rc_valid_controller_nodes|first }}"
  tags: skip_ansible_lint

- name: wait for galera cluster to stabilize
  shell: |
      crm_mon --as-xml | xmllint --xpath \
      'count(//resource[@resource_agent="ocf::heartbeat:galera" and @role="Master" and @active="true" and @orphaned="false" and @blocked="false" and @managed="true" and @failed="false"])' -
  become: yes
  delegate_to: "{{ rc_valid_controller_nodes|first }}"
  ignore_errors: yes
  register: galera_status
  retries: 18
  delay: 10
  until: galera_status.stdout == "3"
  tags: skip_ansible_lint

- name: check pcs status
  command: pcs status
  delegate_to: "{{ rc_valid_controller_nodes|first }}"
  become: yes
  ignore_errors: yes

- name: finalizing l3 agent router hosting
  block:
    - name: get l3 agent id for old node
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron agent-list | grep "neutron-l3-agent" | grep {{ install.controller.to.remove }} | awk '{print $2}'
      register: l3_agent_old_id
      tags: skip_ansible_lint

    - name: get l3 agent id for new node
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron agent-list | grep "neutron-l3-agent" | grep {{ install.controller.to.add }} | awk '{print $2}'
      register: l3_agent_new_id
      tags: skip_ansible_lint

    - name: get all routers on the old l3 agent
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron router-list-on-l3-agent -c name -f json {{ l3_agent_old_id.stdout }}
      register: l3_routers
      when: l3_agent_old_id.stdout != ''
      tags: skip_ansible_lint

    - name: move all routers to the new l3 agent
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron l3-agent-router-add {{ l3_agent_new_id.stdout }} {{ item.name }}
          neutron l3-agent-router-remove {{ l3_agent_new_id.stdout }} {{ item.name }}
      with_items: "{{ l3_routers.stdout|default('[]')|from_json }}"
      when: l3_agent_old_id.stdout != ''
      tags: skip_ansible_lint

    - name: get the list of agents on old node
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron agent-list -F id -F host | grep {{ install.controller.to.remove }} | awk '{print $2}'
      register: all_deprecated_agents
      tags: skip_ansible_lint

    - name: remove agents from old node
      shell: |
          source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
          neutron agent-delete {{ item }}
      with_items: "{{ all_deprecated_agents.stdout_lines }}"
      tags: skip_ansible_lint
  remote_user: stack
  ignore_errors: yes

- name: remove the compute services for the removed node
  shell: |
      source {{ ansible_user_dir }}/{{ install.overcloud.stack }}rc
      for SERVICE in $(openstack compute service list --host {{ install.controller.to.remove }}.localdomain -f value -c ID) ; do
          openstack compute service delete $SERVICE
      done
  ignore_errors: yes
  tags: skip_ansible_lint
  remote_user: stack
