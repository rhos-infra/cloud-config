- name: get the UUID of "{{ install.controller.to.remove }}"
  shell: |
      source ~/stackrc
      openstack server list --name {{ install.controller.to.remove }} -f value -c ID
  register: node_uuid_info
  tags: skip_ansible_lint
  when:
      - install.version|default(undercloud_version)|openstack_release < 17

- name: set node_uuid
  set_fact:
      replace_node_uuid: "{{ node_uuid_info.stdout }}"
  when:
      - install.version|default(undercloud_version)|openstack_release < 17

- name: get the UUID of "{{ install.controller.to.remove }}"
  shell: |
      source ~/stackrc
      metalsmith -c 'Allocation UUID' -f value show {{ install.controller.to.remove }}
  register: node_uuid_info
  tags: skip_ansible_lint
  when:
      - install.version|default(undercloud_version)|openstack_release >= 17

- name: set node_uuid
  set_fact:
      replace_node_uuid: "{{ node_uuid_info.stdout }}"
  when:
      - install.version|default(undercloud_version)|openstack_release >= 17

- name: get baremetal info
  shell: |
      source ~/stackrc
      openstack baremetal {{ 'node' if install.version|default(undercloud_version)|openstack_release >= 10 else '' }} show --instance {{ replace_node_uuid }} -c uuid -f value
  register: baremetal_info
  tags: skip_ansible_lint

- name: set baremetal uuid fact
  set_fact:
      replace_node_baremetal_uuid: "{{ baremetal_info.stdout }}"

- name: set the node "{{ install.controller.to.remove }}" into maintenance mode
  shell: |
      source ~/stackrc
      openstack baremetal {{ 'node' if install.version|default(undercloud_version)|openstack_release >= 10 else '' }} maintenance set {{ replace_node_baremetal_uuid }}
  register: node_uuid_info
  tags: skip_ansible_lint
  when:
    - not install.use.the.same.node|bool

- name: call add node role
  include_role:
      name: add-node
  vars:
      an_nodes_to_add:
          - "{{ install.controller.to.add }}"
      an_ignore_nodes:
          - "{{ install.controller.to.remove }}"
  when:
    - not install.use.the.same.node|bool

- block:
    - name: create template with controller index to remove
      template:
          dest: "/home/stack/remove-controller.yaml"
          src: remove-controller.yaml.j2

    - name: append script to the deploy script
      lineinfile:
          dest: "{{ overcloud_deploy_script }}"
          line: "-e /home/stack/remove-controller.yaml \\"
          insertbefore: "^--log-file.*"
          backup: yes
  when:
      - install.version|default(undercloud_version)|openstack_release < 17

- name: print deploy command
  command: "cat {{ overcloud_deploy_script }}"

- name: execute the overcloud deploy script
  shell: |
      source ~/stackrc
      bash {{ overcloud_deploy_script }} &> overcloud_replace_controller.log
  register: overcloud_replace
  ignore_errors: yes
  tags: skip_ansible_lint

- name: print the last few lines of the output to spot failures
  command: tail -n60 overcloud_replace_controller.log

- name: print stack failures
  shell: |
      source ~/stackrc
      openstack stack failures list {{ install.overcloud.stack }} --long 2>&1 | tee openstack_failures_replace.log
  when:
      - overcloud_replace.rc != 0 and undercloud_version|openstack_release >= 10
      - install.version|default(undercloud_version)|openstack_release < 17
  tags: skip_ansible_lint

- name: fail on failure
  fail:
      msg: "Controller replacement failed. Check logs above."
  when:
      - overcloud_replace is defined
      - overcloud_replace.rc != 0

- block:
    - name: verify spec.yml exists
      stat:
          path: spec.yml
      register: spec_yml
      delegate_to: "{{ _target_controller }}"

    - name: report when spec.yml does not exist
      fail:
          msg: see remove_ceph_monitor.yml task "export ceph spec on working controller" for information on how spec.yml was created
      when: not spec_yml.stat.exists

    - name: change each instance of removed controller to new controller in spec.yml
      shell: sed -i "s/{{ install.controller.to.remove }}/{{ install.controller.to.add }}/g" spec.yml
      delegate_to: "{{ _target_controller }}"

    - name: reapply the ceph storage specification
      shell: "cat spec.yml | sudo cephadm shell -- ceph orch apply -i -"
      delegate_to: "{{ _target_controller }}"

    - name: wait for new controller to be shown in ceph status
      shell: "cephadm shell ceph -s"
      delegate_to: "{{ _target_controller }}"
      register: ceph_add_status
      until: '"{{ install.controller.to.add }}" in ceph_add_status.stdout and "out of quorum" not in ceph_add_status.stdout'
      retries: 20
      delay: 3
      become: yes
  when:
      - install.version|default(undercloud_version)|openstack_release >= 17
      - "'ceph' in groups"
